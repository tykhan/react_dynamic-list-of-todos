{"version":3,"sources":["components/Todo/Todo.jsx","components/TodoList/TodoList.jsx","api.js","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["Todo","this","props","todo","selectUser","type","readOnly","title","className","value","userId","onClick","event","React","PureComponent","defaultProps","TodoList","todos","selectedUserId","query","status","filteredTodos","filter","toLowerCase","includes","completed","map","key","id","getSelectedUser","fetch","then","response","json","result","data","CurrentUser","state","userInfo","setState","prevProps","name","email","phone","clearInfo","Component","App","target","clearUserInfo","placeholder","onChange","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eba323c5.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Todo extends React.PureComponent {\n  render() {\n    const { todo, selectUser } = this.props;\n\n    return (\n      <>\n        <label>\n          <input type=\"checkbox\" readOnly />\n          <p>{todo.title}</p>\n        </label>\n\n        <button\n          className=\"\n            TodoList__user-button\n            TodoList__user-button--selected\n            button\n          \"\n          type=\"button\"\n          value={todo.userId}\n          onClick={event => selectUser(event)}\n        >\n          {`User #${todo.userId}`}\n        </button>\n      </>\n    );\n  }\n}\n\nTodo.propTypes = {\n  selectUser: PropTypes.func.isRequired,\n  todo: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    userId: PropTypes.number.isRequired,\n    id: PropTypes.number.isRequired,\n  }),\n};\n\nTodo.defaultProps = {\n  todo: {},\n};\n","import React from 'react';\nimport './TodoList.scss';\nimport PropTypes from 'prop-types';\nimport { Todo } from '../Todo/Todo';\n\nexport class TodoList extends React.PureComponent {\n  render() {\n    const { todos, selectUser, selectedUserId, query, status } = this.props;\n\n    let filteredTodos = todos.filter(todo =>\n      todo.title.toLowerCase().includes(query.toLowerCase())\n    );\n\n    if (status === 'Active') {\n      filteredTodos = filteredTodos.filter(todo => !todo.completed);\n    } else if (status === 'Finished') {\n      filteredTodos = filteredTodos.filter(todo => todo.completed);\n    }\n\n    return (\n      <div className=\"TodoList__list-container\">\n        <ul className=\"TodoList__list\">\n          {filteredTodos.map(todo => (\n            <li\n              key={todo.id}\n              className={\n                `TodoList__item TodoList__item--${todo.completed\n                  ? 'checked'\n                  : 'unchecked'}`\n              }\n            >\n              <Todo\n                todo={todo}\n                selectUser={selectUser}\n                selectedUserId={selectedUserId}\n              />\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    userId: PropTypes.number.isRequired,\n  })),\n  query: PropTypes.string,\n  status: PropTypes.string,\n  selectedUserId: PropTypes.number.isRequired,\n  selectUser: PropTypes.func.isRequired,\n};\n\nTodoList.defaultProps = {\n  query: '',\n  status: '',\n  todos: [],\n};\n","const TODOS_URL = 'https://mate-api.herokuapp.com/todos';\nconst USERS_URL = 'https://mate-api.herokuapp.com/users/';\n\nexport const getTodos = () => fetch(TODOS_URL)\n  .then(response => response.json())\n  .then(result => result.data);\n\nexport const getSelectedUser = userId => fetch(`${USERS_URL}${userId}`)\n  .then(response => response.json())\n  .then(result => result.data);\n","import React from 'react';\nimport './CurrentUser.scss';\nimport PropTypes from 'prop-types';\nimport { getSelectedUser } from '../../api';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    userInfo: null,\n  }\n\n  componentDidMount() {\n    getSelectedUser(this.props.userId)\n      .then(userInfo => this.setState({\n        userInfo,\n      }));\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.userId === this.props.userId) {\n      return;\n    }\n\n    getSelectedUser(this.props.userId)\n      .then(userInfo => this.setState({\n        userInfo,\n      }));\n  }\n\n  render() {\n    const { userInfo } = this.state;\n\n    return (!userInfo)\n      ? 'No info about user'\n      : (\n        <div className=\"CurrentUser\">\n          <h2 className=\"CurrentUser__title\">\n            <span>\n              Selected user:\n              {userInfo.id}\n            </span>\n          </h2>\n\n          <h3 className=\"CurrentUser__name\">{userInfo.name}</h3>\n          <p className=\"CurrentUser__email\">{userInfo.email}</p>\n          <p className=\"CurrentUser__phone\">{userInfo.phone}</p>\n          <button\n            type=\"button\"\n            className=\"CurrentUser__clear-button\"\n            onClick={this.props.clearInfo}\n          >\n            Clear info\n          </button>\n        </div>\n      );\n  }\n}\n\nCurrentUser.propTypes = {\n  clearInfo: PropTypes.func.isRequired,\n  userId: PropTypes.number.isRequired,\n  userInfo: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string,\n    email: PropTypes.string,\n    phone: PropTypes.string,\n  }),\n};\n\nCurrentUser.defaultProps = {\n  userInfo: {},\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n    query: '',\n    status: 'All',\n  };\n\n  componentDidMount() {\n    getTodos()\n      .then(todos => this.setState({\n        todos: todos.filter(todo => todo.userId != null),\n      }));\n  }\n\n  selectUser = (event) => {\n    const { value } = event.target;\n\n    this.setState({ selectedUserId: value });\n  }\n\n  clearUserInfo = () => {\n    this.setState({ selectedUserId: 0 });\n  }\n\n  render() {\n    const { todos, selectedUserId, query, status } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <input\n            className=\"App__search\"\n            type=\"text\"\n            placeholder=\"Enter todo title\"\n            value={query}\n            onChange={(event) => {\n              this.setState({ query: event.target.value });\n            }}\n          />\n          <select\n            onChange={event => this.setState({ status: event.target.value })\n            }\n            className=\"App__select-visible\"\n          >\n            <option value=\"All\">All</option>\n            <option value=\"Finished\">Finished</option>\n            <option value=\"Active\">Active</option>\n          </select>\n          <TodoList\n            todos={todos}\n            selectUser={this.selectUser}\n            selectedUserId={selectedUserId}\n            query={query}\n            status={status}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                clearInfo={this.clearUserInfo}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}